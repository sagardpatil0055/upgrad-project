- name: Install Docker on app and jenkins
  hosts: _app,_jenkins
  become: yes
  roles:
    - role: ansible-role-docker

- name: Add current user to docker group
  hosts: _app,_jenkins
  become: yes
  tasks:
    - name: Add ubuntu user to docker group
      user:
        name: "ubuntu"
        groups: docker
        append: yes

- name: Distribute project.pem from bastion to app and jenkins
  hosts: _app,_jenkins
  become: yes
  tasks:
    - name: Copy project.pem from bastion to /home/ubuntu/ on target host
      copy:
        src: /home/ubuntu/project.pem
        dest: /home/ubuntu/project.pem
        owner: ubuntu
        group: ubuntu
        mode: '0400'


- name: Install Jenkins with OpenJDK 21 on Ubuntu
  hosts: _jenkins,_app
  become: yes
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Add OpenJDK PPA (if needed for JDK 21)
      apt_repository:
        repo: ppa:openjdk-r/ppa
        state: present

    - name: Install OpenJDK 21
      apt:
        name: openjdk-21-jdk
        state: present

- name: Install Jenkins with OpenJDK 21 on Ubuntu
  hosts: _jenkins
  become: yes
  tasks:
    - name: Download Jenkins GPG key
      get_url:
        url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
        dest: /usr/share/keyrings/jenkins-keyring.asc
        mode: '0644'

    - name: Add Jenkins apt repository (manual echo method)
      copy:
        dest: /etc/apt/sources.list.d/jenkins.list
        content: |
          deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/
        mode: '0644'

    - name: Update apt cache after adding Jenkins repo
      apt:
        update_cache: yes

    - name: Install Jenkins
      apt:
        name: jenkins
        state: present

    - name: Ensure Jenkins is started and enabled
      service:
        name: jenkins
        state: started
        enabled: yes

- name: Install ECR Credential Helper on _jenkins and _app
  hosts: _jenkins,_app
  become: true
  vars:
    ecr_registry: "980104576357.dkr.ecr.us-east-1.amazonaws.com"
    helper_version: "v0.7.0"

  tasks:
    - name: Install curl and unzip
      apt:
        name: [curl, unzip]
        state: present
        update_cache: yes

    - name: Download ECR credential helper zip
      get_url:
        url: "https://github.com/awslabs/amazon-ecr-credential-helper/releases/download/{{ helper_version }}/docker-credential-ecr-login-{{ helper_version }}-linux-amd64.zip"
        dest: "/tmp/docker-credential-ecr-login.zip"
        mode: '0644'

    - name: Unzip the binary
      unarchive:
        src: "/tmp/docker-credential-ecr-login.zip"
        dest: "/usr/local/bin/"
        remote_src: yes
        mode: '0755'

    - name: Create Docker config directory
      become_user: ubuntu
      file:
        path: /home/ubuntu/.docker
        state: directory
        mode: '0700'

    - name: Configure Docker to use ECR credential helper
      become_user: ubuntu
      copy:
        dest: /home/ubuntu/.docker/config.json
        content: |
          {
            "credHelpers": {
              "{{ ecr_registry }}": "ecr-login"
            }
          }
        mode: '0600'


- name: Install AWS CLI v2 on Ubuntu
  hosts: _jenkins,_app
  become: true
  tasks:
    - name: Update apt and install unzip & curl
      apt:
        name:
          - unzip
          - curl
        state: present
        update_cache: yes

    - name: Download AWS CLI zip
      get_url:
        url: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
        dest: /tmp/awscliv2.zip

    - name: Unzip AWS CLI installer
      unarchive:
        src: /tmp/awscliv2.zip
        dest: /tmp
        remote_src: yes

    - name: Run AWS CLI installer
      command: /tmp/aws/install --update

    - name: Verify AWS CLI installation
      command: aws --version
      register: aws_version

    - name: Show installed version
      debug:
        msg: "Installed AWS CLI version: {{ aws_version.stdout }}"
